name: "Code coverage"
description: "Lint and upload code coverage to codecov"

inputs:
    run-lint:
        description: "Run linting"
        required: true
    codecov-token:
        description: "The token to use for uploading to codecov"
        required: true

runs:
    using: "composite"
    steps:
        - name: "Validate codecov.yml"
          id: "lint_codecov"
          if: "inputs.run-lint"
          shell: "bash"
          run: "curl --fail-with-body --data-binary @.github/.codecov.yml https://codecov.io/validate"

        - name: "Download Codecov CLI Binary"
          shell: "bash"
          run: "curl -Os https://cli.codecov.io/latest/linux/codecov"

        - name: "Verify integrity get GPG"
          shell: "bash"
          run: "curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import" # One-time step

        - name: "Get SHAsums"
          shell: "bash"
          run: |
              curl -Os https://cli.codecov.io/latest/linux/codecov.SHA256SUM
              curl -Os https://cli.codecov.io/latest/linux/codecov.SHA256SUM.sig

        - name: "Test Signature"
          shell: "bash"
          run: "gpgv codecov.SHA256SUM.sig codecov.SHA256SUM"

        - name: "Test SHAsums"
          shell: "bash"
          run: "shasum -a 256 -c codecov.SHA256SUM"

        - name: "Fix permission"
          shell: "bash"
          run: "sudo chmod +x codecov"

        - name: "Upload code coverage to codecov"
          shell: "bash"
          run: |
              for dir in packages/*; do
                  ./codecov --verbose upload-process --dir "${dir}" --flag "$(basename "${dir}")" --token "${CODECOV_TOKEN}" -n "$(basename "${dir}")"-${{ github.run_id }} --fail-on-error --codecov-yml-path .github/.codecov.yml
              done
          env:
              CODECOV_TOKEN: "${{ inputs.codecov-token }}"
