name: "Setup Environment and Resources"
description: "Setup node.js and caching scoped within a workflow"

inputs:
    # The node.js version to use
    node-version:
        description: "The node.js version to use"
        required: false
        default: "18"

    npm-version:
        description: "The npm version to use"
        required: false
        default: "9.6.x"

runs:
    using: "composite"
    steps:
        - name: "Setup pnpm"
          uses: "pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d" # v3.0.0
          with:
              run_install: false

        - name: "Set node version to ${{ inputs.node-version }}"
          uses: "actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8" # v4.0.2
          with:
              node-version: "${{ inputs.node-version }}"
              cache: "pnpm"

        - name: "Verify the integrity of provenance attestations and registry signatures for installed dependencies"
          shell: "bash"
          run: "pnpm dlx audit-ci@^6 --config ./audit-ci.jsonc --report-type=summary"

        # @see: npm install -g npm@latest is necessary to make provenance available. More info: https://docs.npmjs.com/generating-provenance-statements
        - name: "Upgrade npm to ${{ inputs.npm-version }} version"
          shell: "bash"
          run: "npm install --global npm@${{ inputs.npm-version }}"
          env:
              SKIP_CHECK: "true"

        - name: "Check npm version"
          shell: "bash"
          run: "npm -v"
          env:
              SKIP_CHECK: "true"

        - name: "Setup caching dependencies"
          uses: "actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319" # v4.0.1
          id: "cache-node_modules"
          with:
              path: |
                  ~/.pnpm-store
                  **/node_modules
              key: "node_modules-${{ runner.os }}-node-${{ inputs.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}"
              restore-keys: |
                  node_modules-${{ runner.os }}-node-${{ inputs.node-version }}-

        - name: "Cache Nx"
          uses: "actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319" # v4.0.1
          with:
              path: ".nx/cache"
              key: "cache-nx-${{ runner.os }}-node-${{ inputs.node-version }}-${{ github.ref_name }}-${{ hashFiles('pnpm-lock.yaml') }}-${{ github.sha }}"
              restore-keys: |
                  cache-nx-${{ runner.os }}-node-${{ inputs.node-version }}-${{ github.ref_name }}-${{ hashFiles('pnpm-lock.yaml') }}-
                  cache-nx-${{ runner.os }}-node-${{ inputs.node-version }}-${{ github.ref_name }}-

        - name: "Install packages"
          shell: "bash"
          run: "pnpm install --frozen-lockfile --prefer-offline"
          env:
              "PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD": 1
              "CYPRESS_INSTALL_BINARY": 0
              "SKIP_CHECK": "true"
              "HUSKY": 0
