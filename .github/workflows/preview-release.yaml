name: "Preview Release"

on: # yamllint disable-line rule:truthy
    issue_comment:
        types: ["created"]

permissions:
    contents: "read" # to fetch code (actions/checkout)

env:
    NX_BRANCH: "${{ github.event.number }}"
    NX_RUN_GROUP: "${{ github.run_id }}"
    HEAD_REF: "${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref_name }}"
    HEAD_REPOSITORY: "${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name || github.repository }}"

jobs:
    preview:
        name: "Preview Release"
        if: "github.repository == 'visulima/visulima' && (github.event_name == 'push' || github.event.issue.pull_request && startsWith(github.event.comment.body, '/pkg-pr-new'))"
        runs-on: "ubuntu-latest"
        permissions:
            contents: write

        steps:
            - name: "Harden Runner"
              uses: "step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6" # v2.8.1
              with:
                  egress-policy: "audit"

            - name: "Validate user"
              if: "github.event.issue.pull_request"
              uses: "actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea" # v7.0.1
              with:
                  script: |
                      const user = context.payload.sender.login
                      console.log(`Validate user: ${user}`)

                      let hasTriagePermission = false
                      try {
                        const { data } = await github.rest.repos.getCollaboratorPermissionLevel({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          username: user,
                        });
                        hasTriagePermission = data.user.permissions.triage
                      } catch (e) {
                        console.warn(e)
                      }

                      if (hasTriagePermission) {
                        console.log('Allowed')
                        await github.rest.reactions.createForIssueComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          comment_id: context.payload.comment.id,
                          content: '+1',
                        })
                      } else {
                        console.log('Not allowed')
                        await github.rest.reactions.createForIssueComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          comment_id: context.payload.comment.id,
                          content: '-1',
                        })
                        throw new Error('not allowed')
                      }

            - name: "Git checkout"
              uses: "actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29" # v4.1.6
              with:
                  fetch-depth: 0
                  persist-credentials: false
              env:
                  GIT_COMMITTER_NAME: "GitHub Actions Shell"
                  GIT_AUTHOR_NAME: "GitHub Actions Shell"
                  EMAIL: "github-actions[bot]@users.noreply.github.com"

            - name: "Derive appropriate SHAs for base and head for `nx affected` commands"
              id: "setSHAs"
              uses: "nrwl/nx-set-shas@76907e7e5d3cd17ddb5e2b123389f054bffcdd03" # v4

            - name: "Setup resources and environment"
              id: "setup"
              uses: "anolilab/workflows/step/setup@main"
              with:
                  node-version: "18.x"
                  cache-prefix: "semantic-release"

            # Temporary solution until Nx solve this https://github.com/nrwl/nx/issues/22259
            - name: "Get changed files"
              id: "files"
              uses: "tj-actions/changed-files@20576b4b9ed46d41e2d45a2256e5e2316dde6834" # v43.0.1
              with:
                  files_ignore_from_source_file: ".github/ignore-files-for-nx-affected.yml"
                  base_sha: "${{ steps.setSHAs.outputs.base }}"
                  separator: ","

            - name: "Build"
              shell: "bash"
              run: |
                  files="${{ steps.files.outputs.all_changed_files }}";
                  pnpm run build:affected:prod:packages --files=${files//\\/\/}

            - name: "Prepare nx cache"
              shell: "bash"
              run: "tar -cf - .nx/cache | lz4 > /tmp/nx_cache.tar.lz4" # compress nx cache

            - name: "Preview Release"
              shell: "bash"
              run: "node ./scripts/publish-preview-release.js"
