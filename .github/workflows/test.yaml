# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Tests"

on: # yamllint disable-line rule:truthy
    push:
        branches:
            - "main"
    pull_request: # yamllint disable-line rule:empty-values

concurrency:
    group: "ci-tests-${{ github.ref }}-1"
    cancel-in-progress: true

permissions:
    contents: "read" # to fetch code (actions/checkout)

jobs:
    files-changed:
        name: "Detect what files changed"
        runs-on: "ubuntu-20.04"
        timeout-minutes: 3
        # Map a step output to a job output
        outputs:
            packages: "${{ steps.changes.outputs.packages }}"
        steps:
          - name: "Git checkout"
            uses: "actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab" # v3.5.2
            env:
                GIT_COMMITTER_NAME: "GitHub Actions Shell"
                GIT_AUTHOR_NAME: "GitHub Actions Shell"
                EMAIL: "github-actions[bot]@users.noreply.github.com"

          - name: "Check for backend file changes"
            uses: "dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50"  # v2.11.1
            id: "changes"
            with:
                token: "${{ github.token }}"
                filters: ".github/file-filters.yml"

    test:
        if: "needs.files-changed.outputs.packages == 'true'"
        needs: "files-changed"
        strategy:
            matrix:
                os: ["ubuntu-latest", "windows-latest", "macos-latest"]
                node_version: ["16", "18", "19", "20"]
            fail-fast: false
        name: "Test (node-${{ matrix.node_version }}, ${{ matrix.os }})"
        runs-on: "${{ matrix.os }}"
        steps:
            - name: "Harden Runner"
              uses: "step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969" # v2.4.0
              with:
                  egress-policy: "audit"

            - name: "Git checkout"
              uses: "actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab" # v3.5.2
              env:
                  GIT_COMMITTER_NAME: "GitHub Actions Shell"
                  GIT_AUTHOR_NAME: "GitHub Actions Shell"
                  EMAIL: "github-actions[bot]@users.noreply.github.com"

            - uses: "pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd" # v2.2.4
              with:
                  version: 8
                  run_install: false

            - name: "Set node version to ${{ matrix.node_version }}"
              uses: "actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c" # v3.6.0
              with:
                  node-version: "${{ matrix.node_version }}"
                  cache: "pnpm"

            - name: "Check npm version"
              run: "npm -v"
              env:
                  SKIP_CHECK: "true"

            - name: "Install packages"
              run: "pnpm install --frozen-lockfile"
              env:
                  SKIP_CHECK: "true"

            - name: "Verify the integrity of provenance attestations and registry signatures for installed dependencies"
              run: "npm audit signatures"

            - name: "Build"
              run: "pnpm run build:packages"

            - name: "test and coverage"
              run: "pnpm run test:coverage"

    # This check runs once all dependant jobs have passed
    # It symbolizes that all required Frontend checks have succesfully passed (Or skipped)
    # This check is the only required Github check
    test-required-check:
        needs: ["files-changed", "test"]
        name: "Check Test Run"
        # This is necessary since a failed/skipped dependent job would cause this job to be skipped
        if: "always()"
        runs-on: "ubuntu-20.04"
        steps:
            # If any jobs we depend on fail, we will fail since this is a required check
            # NOTE: A timeout is considered a failure
            - name: "Check for failures"
              if: "contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')"
              run: |
                  echo "One of the dependent jobs have failed. You may need to re-run it." && exit 1
