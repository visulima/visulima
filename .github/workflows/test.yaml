# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Tests"

on: # yamllint disable-line rule:truthy
    push:
        branches:
            - "main"
    pull_request: # yamllint disable-line rule:empty-values

concurrency:
    group: "ci-tests-${{ github.ref }}-1"
    cancel-in-progress: true

permissions:
    contents: "read" # to fetch code (actions/checkout)

jobs:
    test:
        strategy:
            matrix:
                os: ["ubuntu-latest", "windows-latest", "macos-latest"]
                node_version: ["16", "18", "19", "20"]
            fail-fast: false

        name: "Test (node-${{ matrix.node_version }}, ${{ matrix.os }})"

        runs-on: "${{ matrix.os }}"

        steps:
            - name: "Git checkout"
              uses: "actions/checkout@v3"
              env:
                  GIT_COMMITTER_NAME: "GitHub Actions Shell"
                  GIT_AUTHOR_NAME: "GitHub Actions Shell"
                  EMAIL: "github-actions[bot]@users.noreply.github.com"

            - uses: "pnpm/action-setup@v2.2.4"
              with:
                  version: 8
                  run_install: false

            - name: "Set node version to ${{ matrix.node_version }}"
              uses: "actions/setup-node@v3"
              with:
                  node-version: "${{ matrix.node_version }}"
                  cache: "pnpm"

            - name: "Check npm version"
              run: "npm -v"
              env:
                  SKIP_CHECK: "true"

            - name: "Install packages"
              run: "pnpm install --frozen-lockfile"
              env:
                  SKIP_CHECK: "true"

            - name: "Verify the integrity of provenance attestations and registry signatures for installed dependencies"
              run: "npm audit signatures"

            - name: "Build"
              run: "pnpm run build:packages"

            - name: "test and coverage"
              run: "pnpm run test:coverage"
