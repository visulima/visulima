// Vitest Snapshot v1

exports[`swagger:xhr > should match snapshot 1`] = `
{
  "components": {
    "examples": {
      "FileMeta": {
        "value": [
          {
            "value": {
              "createdAt": "2022-12-16T10:35:17.466Z",
              "id": "391c9157ec481ac6-f72b2d884632d7e6-cdeb2056546033e3",
              "modifiedAt": "2022-12-16T10:35:17.470Z",
            },
          },
        ],
      },
      "FileMetaPagination": {
        "value": {
          "data": [
            {
              "createdAt": "2022-12-16T10:35:17.466Z",
              "id": "391c9157ec481ac6-f72b2d884632d7e6-cdeb2056546033e3",
              "modifiedAt": "2022-12-16T10:35:17.470Z",
            },
          ],
          "meta": {
            "firstPage": 1,
            "firstPageUrl": "/?page=1",
            "lastPage": 1,
            "lastPageUrl": "/?page=10",
            "nextPageUrl": "/?page=2",
            "page": 1,
            "perPage": 1,
            "previousPageUrl": null,
            "total": 1,
          },
        },
      },
    },
    "parameters": {
      "UploadIDinPath": {
        "description": "Upload ID",
        "in": "path",
        "name": "id",
        "schema": {
          "type": "string",
        },
      },
    },
    "responses": {
      "404": {
        "content": {
          "application/json": {
            "example": {
              "error": {
                "code": "FileNotFound",
                "message": "Not found",
              },
            },
            "schema": {
              "$ref": "#/components/schemas/Error",
            },
          },
        },
        "description": "Not Found",
      },
    },
    "schemas": {
      "Error": {
        "description": "Error",
        "properties": {
          "error": {
            "properties": {
              "code": {
                "minLength": 1,
                "type": "string",
              },
              "message": {
                "minLength": 1,
                "type": "string",
              },
              "name": {
                "minLength": 3,
                "type": "string",
              },
            },
            "required": [
              "message",
            ],
            "type": "object",
          },
        },
        "required": [
          "error",
        ],
        "type": "object",
      },
      "FileMeta": {
        "description": "File meta",
        "properties": {
          "bytesWritten": {
            "type": "integer",
          },
          "contentType": {
            "type": "string",
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
          },
          "id": {
            "minLength": 1,
            "type": "string",
          },
          "metadata": {
            "type": "object",
          },
          "name": {
            "minLength": 1,
            "type": "string",
          },
          "originalName": {
            "minLength": 1,
            "type": "string",
          },
          "status": {
            "enum": [
              "completed",
              "part",
              "deleted",
              "created",
            ],
            "type": "string",
          },
        },
        "type": "object",
      },
      "FileMetaPagination": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PaginationMeta",
            },
            "type": "array",
            "xml": {
              "name": "data",
              "wrapped": true,
            },
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta",
          },
        },
        "type": "object",
        "xml": {
          "name": "FileMetaPagination",
        },
      },
      "PaginationMeta": {
        "properties": {
          "firstPage": {
            "description": "Returns the number for the first page. It is always 1",
            "minimum": 0,
            "type": "integer",
          },
          "firstPageUrl": {
            "description": "The URL for the first page",
            "type": "string",
          },
          "lastPage": {
            "description": "Returns the value for the last page by taking the total of rows into account",
            "minimum": 0,
            "type": "integer",
          },
          "lastPageUrl": {
            "description": "The URL for the last page",
            "type": "string",
          },
          "nextPageUrl": {
            "description": "The URL for the next page",
            "type": "string",
          },
          "page": {
            "description": "Current page number",
            "minimum": 1,
            "type": "integer",
          },
          "perPage": {
            "description": "Returns the value for the limit passed to the paginate method",
            "minimum": 0,
            "type": "integer",
          },
          "previousPageUrl": {
            "description": "The URL for the previous page",
            "type": "string",
          },
          "total": {
            "description": "Holds the value for the total number of rows in the database",
            "minimum": 0,
            "type": "integer",
          },
        },
        "type": "object",
        "xml": {
          "name": "PaginationMeta",
        },
      },
    },
  },
  "paths": {
    "/": {
      "get": {
        "description": "List upload",
        "operationId": "il7asoJjJEMhngUeSt4tHVu8Zxx4EFG/FDeJfL3+oPE=MultipartGetList",
        "parameters": [
          {
            "description": "Maximum number of elements to retrieve.",
            "in": "query",
            "name": "limit",
            "schema": {
              "nullable": true,
              "type": "integer",
            },
          },
          {
            "description": "Page number. Use only for pagination.",
            "in": "query",
            "name": "page",
            "schema": {
              "nullable": true,
              "type": "integer",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Default": {
                    "$ref": "#/components/examples/FileMeta",
                  },
                  "Pagination": {
                    "$ref": "#/components/examples/FileMetaPagination",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/FileMeta",
                },
              },
            },
            "description": "OK",
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Error",
          },
        },
        "summary": "List upload",
        "tags": [
          "Multipart",
        ],
      },
      "post": {
        "description": "Create upload",
        "operationId": "il7asoJjJEMhngUeSt4tHVu8Zxx4EFG/FDeJfL3+oPE=MultipartCreate",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "File to upload",
                    "format": "binary",
                    "type": "string",
                  },
                  "metadata": {
                    "description": "JSON stringifies metadata",
                    "example": "{ \\"name\\": \\"video.mp4\\", \\"mimeType\\": \\"video/mp4\\", \\"size\\": 741, \\"lastModified\\": 1631750105530 }",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Upload Metadata",
          "required": false,
        },
        "responses": {
          "200": {
            "description": "The file already exists, send a resume request",
            "headers": {
              "ETag": {
                "description": "Upload ETag",
                "schema": {
                  "example": "d41d8cd98f00b204e9800998ecf8427e",
                  "type": "string",
                },
              },
              "Location": {
                "description": "Resumable URI",
                "schema": {
                  "example": "http://localhost/files?uploadType=Upload&upload_id=2b62dbec20048158af963572fbdf89c6",
                  "format": "uri",
                  "type": "string",
                },
              },
              "X-Upload-Expires": {
                "description": "Upload expiration date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "201": {
            "description": "Upload accepted, send the file contents",
            "headers": {
              "ETag": {
                "description": "Upload ETag",
                "schema": {
                  "example": "d41d8cd98f00b204e9800998ecf8427e",
                  "type": "string",
                },
              },
              "Location": {
                "description": "Resumable URI",
                "schema": {
                  "example": "http://localhost/files?uploadType=Upload&upload_id=2b62dbec20048158af963572fbdf89c6",
                  "format": "uri",
                  "type": "string",
                },
              },
              "X-Upload-Expires": {
                "description": "Upload expiration date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "InvalidFileName",
                    "message": "Invalid file name",
                    "name": "ValidationError",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Bad Request",
          },
          "413": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "RequestEntityTooLarge",
                    "message": "Request entity too large",
                    "name": "ValidationError",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Request Entity Too Large",
          },
          "415": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UnsupportedMediaType",
                    "message": "Unsupported media type",
                    "name": "ValidationError",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Unsupported Media Type",
          },
          "423": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FileLocked",
                    "message": "File locked",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "File locked",
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "GenericUploadError",
                    "message": "Generic Upload Error",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Internal Server Error",
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Error",
          },
        },
        "summary": "Create upload",
        "tags": [
          "Multipart",
        ],
      },
    },
    "//{id}": {
      "delete": {
        "description": "Cancel upload",
        "operationId": "il7asoJjJEMhngUeSt4tHVu8Zxx4EFG/FDeJfL3+oPE=MultipartCancel",
        "parameters": [
          {
            "$ref": "#/components/parameters/UploadIDinPath",
          },
        ],
        "responses": {
          "204": {
            "description": "No Content",
          },
        },
        "summary": "Cancel upload",
        "tags": [
          "Multipart",
        ],
      },
      "get": {
        "description": "Get the uploaded file",
        "operationId": "il7asoJjJEMhngUeSt4tHVu8Zxx4EFG/FDeJfL3+oPE=TusGetFile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "Upload ETag",
                "schema": {
                  "example": "d41d8cd98f00b204e9800998ecf8427e",
                  "type": "string",
                },
              },
              "Last-Modified": {
                "description": "Upload last modified date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
              "X-Upload-Expires": {
                "description": "Upload expiration date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FileNotFound",
                    "message": "Not found",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Not Found",
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Error",
          },
        },
        "summary": "Get the uploaded file",
        "tags": [
          "Multipart",
        ],
      },
    },
  },
}
`;

exports[`swagger:xhr > should match snapshot with custom options 1`] = `
{
  "components": {
    "examples": {
      "FileMeta": {
        "value": [
          {
            "value": {
              "createdAt": "2022-12-16T10:35:17.466Z",
              "id": "391c9157ec481ac6-f72b2d884632d7e6-cdeb2056546033e3",
              "modifiedAt": "2022-12-16T10:35:17.470Z",
            },
          },
        ],
      },
      "FileMetaPagination": {
        "value": {
          "data": [
            {
              "createdAt": "2022-12-16T10:35:17.466Z",
              "id": "391c9157ec481ac6-f72b2d884632d7e6-cdeb2056546033e3",
              "modifiedAt": "2022-12-16T10:35:17.470Z",
            },
          ],
          "meta": {
            "firstPage": 1,
            "firstPageUrl": "/?page=1",
            "lastPage": 1,
            "lastPageUrl": "/?page=10",
            "nextPageUrl": "/?page=2",
            "page": 1,
            "perPage": 1,
            "previousPageUrl": null,
            "total": 1,
          },
        },
      },
    },
    "parameters": {
      "UploadIDinPath": {
        "description": "Upload ID",
        "in": "path",
        "name": "id",
        "schema": {
          "type": "string",
        },
      },
    },
    "responses": {
      "404": {
        "content": {
          "application/json": {
            "example": {
              "error": {
                "code": "FileNotFound",
                "message": "Not found",
              },
            },
            "schema": {
              "$ref": "#/components/schemas/Error",
            },
          },
        },
        "description": "Not Found",
      },
    },
    "schemas": {
      "Error": {
        "description": "Error",
        "properties": {
          "error": {
            "properties": {
              "code": {
                "minLength": 1,
                "type": "string",
              },
              "message": {
                "minLength": 1,
                "type": "string",
              },
              "name": {
                "minLength": 3,
                "type": "string",
              },
            },
            "required": [
              "message",
            ],
            "type": "object",
          },
        },
        "required": [
          "error",
        ],
        "type": "object",
      },
      "FileMeta": {
        "description": "File meta",
        "properties": {
          "bytesWritten": {
            "type": "integer",
          },
          "contentType": {
            "type": "string",
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
          },
          "id": {
            "minLength": 1,
            "type": "string",
          },
          "metadata": {
            "type": "object",
          },
          "name": {
            "minLength": 1,
            "type": "string",
          },
          "originalName": {
            "minLength": 1,
            "type": "string",
          },
          "status": {
            "enum": [
              "completed",
              "part",
              "deleted",
              "created",
            ],
            "type": "string",
          },
        },
        "type": "object",
      },
      "FileMetaPagination": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PaginationMeta",
            },
            "type": "array",
            "xml": {
              "name": "data",
              "wrapped": true,
            },
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta",
          },
        },
        "type": "object",
        "xml": {
          "name": "FileMetaPagination",
        },
      },
      "PaginationMeta": {
        "properties": {
          "firstPage": {
            "description": "Returns the number for the first page. It is always 1",
            "minimum": 0,
            "type": "integer",
          },
          "firstPageUrl": {
            "description": "The URL for the first page",
            "type": "string",
          },
          "lastPage": {
            "description": "Returns the value for the last page by taking the total of rows into account",
            "minimum": 0,
            "type": "integer",
          },
          "lastPageUrl": {
            "description": "The URL for the last page",
            "type": "string",
          },
          "nextPageUrl": {
            "description": "The URL for the next page",
            "type": "string",
          },
          "page": {
            "description": "Current page number",
            "minimum": 1,
            "type": "integer",
          },
          "perPage": {
            "description": "Returns the value for the limit passed to the paginate method",
            "minimum": 0,
            "type": "integer",
          },
          "previousPageUrl": {
            "description": "The URL for the previous page",
            "type": "string",
          },
          "total": {
            "description": "Holds the value for the total number of rows in the database",
            "minimum": 0,
            "type": "integer",
          },
        },
        "type": "object",
        "xml": {
          "name": "PaginationMeta",
        },
      },
    },
  },
  "paths": {
    "/files": {
      "get": {
        "description": "List upload",
        "operationId": "9Kp55CmvPE2lcA5FYRZzNvM5L3PdRPjAoRmAKS63FmM=MultipartGetList",
        "parameters": [
          {
            "description": "Maximum number of elements to retrieve.",
            "in": "query",
            "name": "limit",
            "schema": {
              "nullable": true,
              "type": "integer",
            },
          },
          {
            "description": "Page number. Use only for pagination.",
            "in": "query",
            "name": "page",
            "schema": {
              "nullable": true,
              "type": "integer",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Default": {
                    "$ref": "#/components/examples/FileMeta",
                  },
                  "Pagination": {
                    "$ref": "#/components/examples/FileMetaPagination",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/FileMeta",
                },
              },
            },
            "description": "OK",
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Error",
          },
        },
        "summary": "List upload",
        "tags": [
          "Multipart",
        ],
      },
      "post": {
        "description": "Create upload",
        "operationId": "9Kp55CmvPE2lcA5FYRZzNvM5L3PdRPjAoRmAKS63FmM=MultipartCreate",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "File to upload",
                    "format": "binary",
                    "type": "string",
                  },
                  "metadata": {
                    "description": "JSON stringifies metadata",
                    "example": "{ \\"name\\": \\"video.mp4\\", \\"mimeType\\": \\"video/mp4\\", \\"size\\": 741, \\"lastModified\\": 1631750105530 }",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Upload Metadata",
          "required": false,
        },
        "responses": {
          "200": {
            "description": "The file already exists, send a resume request",
            "headers": {
              "ETag": {
                "description": "Upload ETag",
                "schema": {
                  "example": "d41d8cd98f00b204e9800998ecf8427e",
                  "type": "string",
                },
              },
              "Location": {
                "description": "Resumable URI",
                "schema": {
                  "example": "http://localhost/files?uploadType=Upload&upload_id=2b62dbec20048158af963572fbdf89c6",
                  "format": "uri",
                  "type": "string",
                },
              },
              "X-Upload-Expires": {
                "description": "Upload expiration date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "201": {
            "description": "Upload accepted, send the file contents",
            "headers": {
              "ETag": {
                "description": "Upload ETag",
                "schema": {
                  "example": "d41d8cd98f00b204e9800998ecf8427e",
                  "type": "string",
                },
              },
              "Location": {
                "description": "Resumable URI",
                "schema": {
                  "example": "http://localhost/files?uploadType=Upload&upload_id=2b62dbec20048158af963572fbdf89c6",
                  "format": "uri",
                  "type": "string",
                },
              },
              "X-Upload-Expires": {
                "description": "Upload expiration date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "InvalidFileName",
                    "message": "Invalid file name",
                    "name": "ValidationError",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Bad Request",
          },
          "413": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "RequestEntityTooLarge",
                    "message": "Request entity too large",
                    "name": "ValidationError",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Request Entity Too Large",
          },
          "415": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UnsupportedMediaType",
                    "message": "Unsupported media type",
                    "name": "ValidationError",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Unsupported Media Type",
          },
          "423": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FileLocked",
                    "message": "File locked",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "File locked",
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "GenericUploadError",
                    "message": "Generic Upload Error",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Internal Server Error",
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Error",
          },
        },
        "summary": "Create upload",
        "tags": [
          "Multipart",
        ],
      },
    },
    "/files/{id}": {
      "delete": {
        "description": "Cancel upload",
        "operationId": "9Kp55CmvPE2lcA5FYRZzNvM5L3PdRPjAoRmAKS63FmM=MultipartCancel",
        "parameters": [
          {
            "$ref": "#/components/parameters/UploadIDinPath",
          },
        ],
        "responses": {
          "204": {
            "description": "No Content",
          },
        },
        "summary": "Cancel upload",
        "tags": [
          "Multipart",
        ],
      },
      "get": {
        "description": "Get the uploaded file",
        "operationId": "9Kp55CmvPE2lcA5FYRZzNvM5L3PdRPjAoRmAKS63FmM=TusGetFile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "Upload ETag",
                "schema": {
                  "example": "d41d8cd98f00b204e9800998ecf8427e",
                  "type": "string",
                },
              },
              "Last-Modified": {
                "description": "Upload last modified date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
              "X-Upload-Expires": {
                "description": "Upload expiration date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FileNotFound",
                    "message": "Not found",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Not Found",
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Error",
          },
        },
        "summary": "Get the uploaded file",
        "tags": [
          "Multipart",
        ],
      },
    },
  },
}
`;

exports[`swagger:xhr > should match snapshot with custom options 2`] = `
{
  "components": {
    "examples": {
      "FileMeta": {
        "value": [
          {
            "value": {
              "createdAt": "2022-12-16T10:35:17.466Z",
              "id": "391c9157ec481ac6-f72b2d884632d7e6-cdeb2056546033e3",
              "modifiedAt": "2022-12-16T10:35:17.470Z",
            },
          },
        ],
      },
      "FileMetaPagination": {
        "value": {
          "data": [
            {
              "createdAt": "2022-12-16T10:35:17.466Z",
              "id": "391c9157ec481ac6-f72b2d884632d7e6-cdeb2056546033e3",
              "modifiedAt": "2022-12-16T10:35:17.470Z",
            },
          ],
          "meta": {
            "firstPage": 1,
            "firstPageUrl": "/?page=1",
            "lastPage": 1,
            "lastPageUrl": "/?page=10",
            "nextPageUrl": "/?page=2",
            "page": 1,
            "perPage": 1,
            "previousPageUrl": null,
            "total": 1,
          },
        },
      },
    },
    "parameters": {
      "UploadIDinPath": {
        "description": "Upload ID",
        "in": "path",
        "name": "id",
        "schema": {
          "type": "string",
        },
      },
    },
    "responses": {
      "404": {
        "content": {
          "application/json": {
            "example": {
              "error": {
                "code": "FileNotFound",
                "message": "Not found",
              },
            },
            "schema": {
              "$ref": "#/components/schemas/Error",
            },
          },
        },
        "description": "Not Found",
      },
    },
    "schemas": {
      "Error": {
        "description": "Error",
        "properties": {
          "error": {
            "properties": {
              "code": {
                "minLength": 1,
                "type": "string",
              },
              "message": {
                "minLength": 1,
                "type": "string",
              },
              "name": {
                "minLength": 3,
                "type": "string",
              },
            },
            "required": [
              "message",
            ],
            "type": "object",
          },
        },
        "required": [
          "error",
        ],
        "type": "object",
      },
      "FileMeta": {
        "description": "File meta",
        "properties": {
          "bytesWritten": {
            "type": "integer",
          },
          "contentType": {
            "type": "string",
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
          },
          "id": {
            "minLength": 1,
            "type": "string",
          },
          "metadata": {
            "type": "object",
          },
          "name": {
            "minLength": 1,
            "type": "string",
          },
          "originalName": {
            "minLength": 1,
            "type": "string",
          },
          "status": {
            "enum": [
              "completed",
              "part",
              "deleted",
              "created",
            ],
            "type": "string",
          },
        },
        "type": "object",
      },
      "FileMetaPagination": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PaginationMeta",
            },
            "type": "array",
            "xml": {
              "name": "data",
              "wrapped": true,
            },
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta",
          },
        },
        "type": "object",
        "xml": {
          "name": "FileMetaPagination",
        },
      },
      "PaginationMeta": {
        "properties": {
          "firstPage": {
            "description": "Returns the number for the first page. It is always 1",
            "minimum": 0,
            "type": "integer",
          },
          "firstPageUrl": {
            "description": "The URL for the first page",
            "type": "string",
          },
          "lastPage": {
            "description": "Returns the value for the last page by taking the total of rows into account",
            "minimum": 0,
            "type": "integer",
          },
          "lastPageUrl": {
            "description": "The URL for the last page",
            "type": "string",
          },
          "nextPageUrl": {
            "description": "The URL for the next page",
            "type": "string",
          },
          "page": {
            "description": "Current page number",
            "minimum": 1,
            "type": "integer",
          },
          "perPage": {
            "description": "Returns the value for the limit passed to the paginate method",
            "minimum": 0,
            "type": "integer",
          },
          "previousPageUrl": {
            "description": "The URL for the previous page",
            "type": "string",
          },
          "total": {
            "description": "Holds the value for the total number of rows in the database",
            "minimum": 0,
            "type": "integer",
          },
        },
        "type": "object",
        "xml": {
          "name": "PaginationMeta",
        },
      },
    },
  },
  "paths": {
    "/files": {
      "get": {
        "description": "List upload",
        "operationId": "9Kp55CmvPE2lcA5FYRZzNvM5L3PdRPjAoRmAKS63FmM=MultipartGetList",
        "parameters": [
          {
            "description": "Maximum number of elements to retrieve.",
            "in": "query",
            "name": "limit",
            "schema": {
              "nullable": true,
              "type": "integer",
            },
          },
          {
            "description": "Page number. Use only for pagination.",
            "in": "query",
            "name": "page",
            "schema": {
              "nullable": true,
              "type": "integer",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Default": {
                    "$ref": "#/components/examples/FileMeta",
                  },
                  "Pagination": {
                    "$ref": "#/components/examples/FileMetaPagination",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/FileMeta",
                },
              },
            },
            "description": "OK",
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Error",
          },
        },
        "summary": "List upload",
        "tags": [
          "test",
        ],
      },
      "post": {
        "description": "Create upload",
        "operationId": "9Kp55CmvPE2lcA5FYRZzNvM5L3PdRPjAoRmAKS63FmM=MultipartCreate",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "File to upload",
                    "format": "binary",
                    "type": "string",
                  },
                  "metadata": {
                    "description": "JSON stringifies metadata",
                    "example": "{ \\"name\\": \\"video.mp4\\", \\"mimeType\\": \\"video/mp4\\", \\"size\\": 741, \\"lastModified\\": 1631750105530 }",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Upload Metadata",
          "required": false,
        },
        "responses": {
          "200": {
            "description": "The file already exists, send a resume request",
            "headers": {
              "ETag": {
                "description": "Upload ETag",
                "schema": {
                  "example": "d41d8cd98f00b204e9800998ecf8427e",
                  "type": "string",
                },
              },
              "Location": {
                "description": "Resumable URI",
                "schema": {
                  "example": "http://localhost/files?uploadType=Upload&upload_id=2b62dbec20048158af963572fbdf89c6",
                  "format": "uri",
                  "type": "string",
                },
              },
              "X-Upload-Expires": {
                "description": "Upload expiration date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "201": {
            "description": "Upload accepted, send the file contents",
            "headers": {
              "ETag": {
                "description": "Upload ETag",
                "schema": {
                  "example": "d41d8cd98f00b204e9800998ecf8427e",
                  "type": "string",
                },
              },
              "Location": {
                "description": "Resumable URI",
                "schema": {
                  "example": "http://localhost/files?uploadType=Upload&upload_id=2b62dbec20048158af963572fbdf89c6",
                  "format": "uri",
                  "type": "string",
                },
              },
              "X-Upload-Expires": {
                "description": "Upload expiration date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "InvalidFileName",
                    "message": "Invalid file name",
                    "name": "ValidationError",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Bad Request",
          },
          "413": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "RequestEntityTooLarge",
                    "message": "Request entity too large",
                    "name": "ValidationError",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Request Entity Too Large",
          },
          "415": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UnsupportedMediaType",
                    "message": "Unsupported media type",
                    "name": "ValidationError",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Unsupported Media Type",
          },
          "423": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FileLocked",
                    "message": "File locked",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "File locked",
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "GenericUploadError",
                    "message": "Generic Upload Error",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Internal Server Error",
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Error",
          },
        },
        "summary": "Create upload",
        "tags": [
          "test",
        ],
      },
    },
    "/files/{id}": {
      "delete": {
        "description": "Cancel upload",
        "operationId": "9Kp55CmvPE2lcA5FYRZzNvM5L3PdRPjAoRmAKS63FmM=MultipartCancel",
        "parameters": [
          {
            "$ref": "#/components/parameters/UploadIDinPath",
          },
        ],
        "responses": {
          "204": {
            "description": "No Content",
          },
        },
        "summary": "Cancel upload",
        "tags": [
          "test",
        ],
      },
      "get": {
        "description": "Get the uploaded file",
        "operationId": "9Kp55CmvPE2lcA5FYRZzNvM5L3PdRPjAoRmAKS63FmM=TusGetFile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "Upload ETag",
                "schema": {
                  "example": "d41d8cd98f00b204e9800998ecf8427e",
                  "type": "string",
                },
              },
              "Last-Modified": {
                "description": "Upload last modified date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
              "X-Upload-Expires": {
                "description": "Upload expiration date",
                "schema": {
                  "example": "2021-08-25T11:12:26.635Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FileNotFound",
                    "message": "Not found",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Not Found",
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "Error",
          },
        },
        "summary": "Get the uploaded file",
        "tags": [
          "test",
        ],
      },
    },
  },
}
`;
