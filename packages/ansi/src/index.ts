/**
 * Output a beeping sound.
 */
export const beep = "\u0007";

export { ALT_SCREEN_OFF, ALT_SCREEN_ON, alternativeScreenOff, alternativeScreenOn } from "./alternative-screen";
export { clearLineAndHomeCursor, clearScreenAndHomeCursor, clearScreenFromTopLeft, resetTerminal } from "./clear";
export type { CursorStyle } from "./cursor"; // Enum
export {
    CURSOR_BACKWARD_1,
    CURSOR_DOWN_1,
    CURSOR_FORWARD_1,
    CURSOR_UP_1,
    cursorBackward,
    cursorBackwardTab,
    cursorDown,
    cursorForward,
    cursorHide,
    cursorHorizontalAbsolute,
    cursorHorizontalForwardTab,
    cursorLeft,
    cursorMove,
    cursorNextLine,
    cursorPosition,
    cursorPreviousLine,
    cursorRestore, // Function
    cursorSave, // Function
    cursorShow,
    cursorTo,
    cursorToColumn1,
    cursorUp,
    cursorVerticalAbsolute,
    eraseCharacter,
    REQUEST_CURSOR_POSITION,
    REQUEST_EXTENDED_CURSOR_POSITION,
    RESTORE_CURSOR_DEC, // Constant for ESC 8
    SAVE_CURSOR_DEC, // Constant for ESC 7
    setCursorStyle,
} from "./cursor";
export type { EraseDisplayMode, EraseLineMode } from "./erase";
export {
    eraseDisplay,
    eraseDown,
    eraseInLine,
    eraseLine,
    eraseLineEnd,
    eraseLines,
    eraseLineStart,
    eraseScreen,
    eraseScreenAndScrollback,
    eraseUp,
} from "./erase";
export { default as hyperlink } from "./hyperlink";
export type { ImageOptions } from "./image";
export { image } from "./image";
export type { IITerm2Payload, ITerm2FileProperties } from "./iterm2";
export { IT2_AUTO, it2Cells, it2Percent, it2Pixels, iTerm2, ITerm2File, ITerm2FileEnd, ITerm2FilePart, ITerm2MultipartFileStart } from "./iterm2";
export type { AnsiMode, DecMode, Mode, ModeSetting } from "./mode";
export {
    BDSM,
    BiDirectionalSupportMode,
    // Added modes for compatibility with charmbracelet/x and other terminal libraries
    BracketedPasteMode,
    createAnsiMode,
    createDecMode,
    DECRPM,
    DECRQM,
    DisableModifiersMode,
    InBandResizeMode,
    InsertReplaceMode,
    IRM,
    isModeNotRecognized,
    isModePermanentlyReset,
    isModePermanentlySet,
    isModeReset,
    isModeSet,
    KAM,
    KeyboardActionMode,
    LightDarkMode,
    LineFeedNewLineMode,
    LNM,
    LocalEchoMode,
    OriginMode,
    reportMode,
    RequestBiDirectionalSupportMode,
    RequestInBandResizeMode,
    RequestInsertReplaceMode,
    RequestKeyboardActionMode,
    RequestLineFeedNewLineMode,
    RequestLocalEchoMode,
    requestMode,
    RequestSendReceiveMode,
    RequestUnicodeCoreMode,
    ResetBiDirectionalSupportMode,
    ResetInBandResizeMode,
    ResetInsertReplaceMode,
    ResetKeyboardActionMode,
    ResetLineFeedNewLineMode,
    ResetLocalEchoMode,
    resetMode,
    ResetSendReceiveMode,
    ResetUnicodeCoreMode,
    RM,
    SendFocusEventsMode,
    SendReceiveMode,
    SetBiDirectionalSupportMode,
    SetInBandResizeMode,
    SetInsertReplaceMode,
    SetKeyboardActionMode,
    SetLineFeedNewLineMode,
    SetLocalEchoMode,
    setMode,
    SetSendReceiveMode,
    SetUnicodeCoreMode,
    SGRMouseMode,
    SM,
    SRM,
    TextCursorEnableMode,
    UnicodeCoreMode,
} from "./mode";
export type { MouseButtonType, MouseModifiers } from "./mouse";
export {
    disableAnyEventMouse,
    disableButtonEventMouse,
    disableFocusTracking,
    disableNormalMouse,
    disableSgrMouse,
    disableX10Mouse,
    enableAnyEventMouse,
    enableButtonEventMouse,
    enableFocusTracking,
    enableNormalMouse,
    enableSgrMouse,
    enableX10Mouse,
    encodeMouseButtonByte,
    MouseButton,
    mouseSgrSequence,
    mouseX10Sequence,
} from "./mouse";
export { SCREEN_MAX_LEN_DEFAULT, SCREEN_TYPICAL_LIMIT, screenPassthrough, tmuxPassthrough } from "./passthrough";
export { resetProgressBar, setErrorProgressBar, setIndeterminateProgressBar, setProgressBar, setWarningProgressBar } from "./progress";
export { RESET_INITIAL_STATE, RIS } from "./reset";
export {
    clearTabStop,
    deleteCharacter,
    deleteLine,
    insertCharacter,
    insertLine,
    repeatPreviousCharacter,
    requestPresentationStateReport,
    setLeftRightMargins,
    setTopBottomMargins,
} from "./screen";
export { SCROLL_DOWN_1, SCROLL_UP_1, scrollDown, scrollUp } from "./scroll";
export type { AnsiStatusReport, DecStatusReport, StatusReport } from "./status";
export {
    CPR,
    createAnsiStatusReport,
    createDecStatusReport,
    cursorPositionReport,
    DA1,
    DA2,
    DA3,
    DECXCPR,
    deviceStatusReport,
    DSR,
    DSR_KeyboardLanguageDEC,
    DSR_PrinterStatusDEC,
    DSR_TerminalStatus,
    DSR_UDKStatusDEC,
    extendedCursorPositionReport,
    LightDarkReport,
    reportKeyboardLanguageDEC,
    reportPrimaryDeviceAttributes,
    reportPrinterNoPaperDEC,
    reportPrinterNotReadyDEC,
    reportPrinterReadyDEC,
    reportSecondaryDeviceAttributes,
    reportTerminalNotOK,
    reportTerminalOK,
    reportTertiaryDeviceAttributes,
    reportUDKLockedDEC,
    reportUDKUnlockedDEC,
    requestCursorPositionReport,
    requestExtendedCursorPositionReport,
    requestKeyboardLanguageDEC,
    RequestLightDarkReport,
    RequestNameVersion,
    requestPrimaryDeviceAttributes,
    requestPrimaryDeviceAttributesParam0,
    requestPrinterStatusDEC,
    requestSecondaryDeviceAttributes,
    requestSecondaryDeviceAttributesParam0,
    requestTerminalStatus,
    requestTertiaryDeviceAttributes,
    requestTertiaryDeviceAttributesParam0,
    requestUDKStatusDEC,
    XTVERSION,
} from "./status";
export { default as strip } from "./strip";
export { requestTermcap, requestTerminfo, XTGETTCAP } from "./termcap";
export {
    decsin,
    decswt,
    setIconName,
    setIconNameAndWindowTitle,
    setIconNameAndWindowTitleWithST,
    setIconNameWithST,
    setWindowTitle,
    setWindowTitleWithST,
} from "./title";
export type { XTermWindowOp } from "./window-ops";
export {
    deiconifyWindow,
    iconifyWindow,
    lowerWindow,
    maximizeWindow,
    moveWindow,
    raiseWindow,
    refreshWindow,
    reportWindowPosition,
    reportWindowState,
    requestCellSizePixels,
    requestTextAreaSizeChars,
    requestTextAreaSizePixels,
    resizeTextAreaChars,
    resizeTextAreaPixels,
    restoreMaximizedWindow,
    setPageSizeLines,
    xtermWindowOp,
    XTWINOPS,
} from "./window-ops";
export {
    keyModifierOptions,
    queryKeyModifierOptions,
    queryModifyOtherKeys,
    resetKeyModifierOptions,
    resetModifyOtherKeys,
    setKeyModifierOptions,
    setModifyOtherKeys1,
    setModifyOtherKeys2,
    XTMODKEYS,
    XTQMODKEYS,
} from "./xterm";
