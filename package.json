{
    "name": "visulima",
    "version": "0.0.0",
    "private": true,
    "license": "MIT",
    "sideEffects": false,
    "type": "module",
    "workspaces": [
        "packages/*",
        "apps/*"
    ],
    "scripts": {
        "audit": "audit-ci --config ./audit-ci.jsonc",
        "bench:colorize": "pnpm --filter \"colorize-bench\" run test:bench",
        "bench:deep-clone": "pnpm --filter \"deep-clone\" run test:bench",
        "bench:fmt": "pnpm --filter \"fmt\" run test:bench",
        "bench:inspector": "pnpm --filter \"inspector-bench\" run test:bench",
        "bench:pail": "pnpm --filter \"pail-bench\" run test:bench",
        "bench:redact": "pnpm --filter \"redact-bench\" run test:bench",
        "build": "nx run-many --target=build --all --parallel",
        "build:affected:packages": "nx affected --target=build --exclude=*-bench,docs,storybook --nxBail",
        "build:affected:prod:packages": "nx affected --target=build:prod --exclude=*-bench,docs,storybook --nxBail",
        "build:docs": "nx run-many --target=build:prod --parallel --projects=tag:type:nextra && pnpm run docs:copy && pnpm --filter \"docs\" run build",
        "build:packages": "nx run-many --target=build --parallel --projects=tag:type:package",
        "build:packages:prod": "nx run-many --target=build:prod --parallel --projects=tag:type:package",
        "build:storybook": "pnpm run --filter \"storybook\" build",
        "clean": "nx run-many --target=clean --all --parallel && rimraf ./node_modules",
        "dev:docs": "pnpm run docs:symlink && pnpm run --filter=@apps/docs dev",
        "dev:storybook": "pnpm run --filter \"storybook\" dev",
        "docs:copy": "pnpm --filter \"docs\" run docs:copy",
        "docs:symlink": "pnpm --filter \"docs\" run docs:symlink",
        "example:api-platform:express:4:dev": "pnpm --filter \"express_example_api-platform\" run dev",
        "example:api-platform:next:12:dev": "pnpm --filter \"nextjs_12_example_api-platform\" run dev",
        "example:api-platform:next:13:dev": "pnpm --filter \"nextjs_13_example_api-platform\" run dev",
        "example:connect:next:12:dev": "nx run-many --target=dev --parallel --projects=connect,nextjs_12_example_connect",
        "example:connect:next:13:app:dev": "nx run-many --target=dev --parallel --projects=connect,nextjs_13_app_example_connect",
        "example:connect:next:13:dev": "nx run-many --target=dev --parallel --projects=connect,nextjs_13_example_connect",
        "example:crud:next:12:dev": "nx run-many --target=dev --parallel --projects=crud,api-platform,nextjs_12_example_crud",
        "example:crud:next:13:dev": "nx run-many --target=dev --parallel --projects=crud,api-platform,nextjs_13_example_crud",
        "example:health-check:dev": "pnpm --filter \"nextjs_example_health_check\" run dev",
        "graph": "nx dep-graph",
        "preinstall": "node verify-node-version.cjs && npx only-allow pnpm",
        "lint": "pnpm run lint:prettier && pnpm run lint:eslint && lint:dedupe --check",
        "lint:affected:attw": "nx affected --target=lint:attw --parallel --exclude=*-bench,docs,storybook --nxBail",
        "lint:affected:eslint": "nx affected --target=lint:eslint --parallel --exclude=*-bench,docs,storybook --nxBail",
        "lint:affected:eslint:fix": "nx affected --target=lint:eslint:fix --parallel --exclude=*-bench,docs,storybook --nxBail",
        "lint:affected:package-json": "nx affected --target=lint:package-json --parallel --exclude=*-bench,docs,storybook --nxBail",
        "lint:affected:types": "nx affected --target=lint:types --parallel --exclude=*-bench,docs,storybook --nxBail",
        "lint:attw": "nx run-many --target=lint:attw --all --parallel",
        "lint:dedupe": "pnpm dedupe --check",
        "lint:eslint": "nx run-many --target=lint:eslint --all --parallel",
        "lint:eslint:ansi": "pnpm --filter \"ansi\" run lint:eslint",
        "lint:eslint:api-platform": "pnpm --filter \"api-platform\" run lint:eslint",
        "lint:eslint:boxen": "pnpm --filter \"boxen\" run lint:eslint",
        "lint:eslint:cerebro": "pnpm --filter \"cerebro\" run lint:eslint",
        "lint:eslint:colorize": "pnpm --filter \"colorize\" run lint:eslint",
        "lint:eslint:connect": "pnpm --filter \"connect\" run lint:eslint",
        "lint:eslint:crud": "pnpm --filter \"crud\" run lint:eslint",
        "lint:eslint:deep-clone": "pnpm --filter \"deep-clone\" run lint:eslint",
        "lint:eslint:docs": "pnpm --filter \"docs\" run lint:eslint",
        "lint:eslint:error": "pnpm --filter \"error\" run lint:eslint",
        "lint:eslint:fix": "nx run-many --target=lint:eslint:fix --all --parallel",
        "lint:eslint:fix:ansi": "pnpm --filter \"ansi\" run lint:eslint:fix",
        "lint:eslint:fix:api-platform": "pnpm --filter \"api-platform\" run lint:eslint:fix",
        "lint:eslint:fix:boxen": "pnpm --filter \"boxen\" run lint:eslint:fix",
        "lint:eslint:fix:cerebro": "pnpm --filter \"cerebro\" run lint:eslint:fix",
        "lint:eslint:fix:colorize": "pnpm --filter \"colorize\" run lint:eslint:fix",
        "lint:eslint:fix:connect": "pnpm --filter \"connect\" run lint:eslint:fix",
        "lint:eslint:fix:crud": "pnpm --filter \"crud\" run lint:eslint:fix",
        "lint:eslint:fix:deep-clone": "pnpm --filter \"deep-clone\" run lint:eslint:fix",
        "lint:eslint:fix:docs": "pnpm --filter \"docs\" run lint:eslint:fix",
        "lint:eslint:fix:error": "pnpm --filter \"error\" run lint:eslint:fix",
        "lint:eslint:fix:fmt": "pnpm --filter \"fmt\" run lint:eslint:fix",
        "lint:eslint:fix:fs": "pnpm --filter \"fs\" run lint:eslint:fix",
        "lint:eslint:fix:health-check": "pnpm --filter \"health-check\" run lint:eslint:fix",
        "lint:eslint:fix:humanizer": "pnpm --filter \"humanizer\" run lint:eslint:fix",
        "lint:eslint:fix:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run lint:eslint:fix",
        "lint:eslint:fix:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run lint:eslint:fix",
        "lint:eslint:fix:object": "pnpm --filter \"object\" run lint:eslint:fix",
        "lint:eslint:fix:package": "pnpm --filter \"package\" run lint:eslint:fix",
        "lint:eslint:fix:pagination": "pnpm --filter \"pagination\" run lint:eslint:fix",
        "lint:eslint:fix:pail": "pnpm --filter \"pail\" run lint:eslint:fix",
        "lint:eslint:fix:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run lint:eslint:fix",
        "lint:eslint:fix:redact": "pnpm --filter \"redact\" run lint:eslint:fix",
        "lint:eslint:fix:storybook": "pnpm --filter \"storybook\" run lint:eslint:fix",
        "lint:eslint:fmt": "pnpm --filter \"fmt\" run lint:eslint",
        "lint:eslint:fs": "pnpm --filter \"fs\" run lint:eslint",
        "lint:eslint:health-check": "pnpm --filter \"health-check\" run lint:eslint",
        "lint:eslint:humanizer": "pnpm --filter \"humanizer\" run lint:eslint",
        "lint:eslint:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run lint:eslint",
        "lint:eslint:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run lint:eslint",
        "lint:eslint:object": "pnpm --filter \"object\" run lint:eslint",
        "lint:eslint:package": "pnpm --filter \"package\" run lint:eslint",
        "lint:eslint:pagination": "pnpm --filter \"pagination\" run lint:eslint",
        "lint:eslint:pail": "pnpm --filter \"pail\" run lint:eslint",
        "lint:eslint:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run lint:eslint",
        "lint:eslint:redact": "pnpm --filter \"redact\" run lint:eslint",
        "lint:eslint:storybook": "pnpm --filter \"storybook\" run lint:eslint",
        "lint:fix": "pnpm run lint:prettier:fix && pnpm run lint:eslint:fix && pnpm run sort-package-json",
        "lint:package-json": "nx run-many --target=lint:package-json --parallel --projects=tag:type:package",
        "lint:prettier": "pnpm run lint:prettier:root && nx run-many --target=lint:prettier --all --parallel",
        "lint:prettier:fix": "pnpm run lint:prettier:fix:root && nx run-many --target=lint:prettier:fix --all --parallel",
        "lint:prettier:fix:root": "prettier --config=.prettierrc.cjs --write '*.{json,yml,yaml,js,ts}' && prettier --config=.prettierrc.cjs --write 'examples/**/*.{json,yml,yaml,js,ts}'",
        "lint:prettier:root": "prettier --config=.prettierrc.cjs --check '*.{json,yml,yaml,js,ts}' && prettier --config=.prettierrc.cjs --check 'examples/**/*.{json,yml,yaml,js,ts}'",
        "lint:secrets": "secretlint **/*",
        "lint:staged": "lint-staged --verbose --concurrent false --debug",
        "lint:text": "textlint ./.github/ ./packages/** ./README.md ./UPGRADE.md --parallel --experimental --cache --dry-run",
        "lint:text:fix": "textlint ./.github/ ./packages/** ./README.md ./UPGRADE.md --parallel --experimental --fix",
        "lint:types": "nx run-many --target=lint:types --all --parallel",
        "lint:types:ansi": "pnpm --filter \"ansi\" run lint:types",
        "lint:types:api-platform": "pnpm --filter \"api-platform\" run lint:types",
        "lint:types:boxen": "pnpm --filter \"boxen\" run lint:types",
        "lint:types:cerebro": "pnpm --filter \"cerebro\" run lint:types",
        "lint:types:colorize": "pnpm --filter \"colorize\" run lint:types",
        "lint:types:connect": "pnpm --filter \"connect\" run lint:types",
        "lint:types:crud": "pnpm --filter \"crud\" run lint:types",
        "lint:types:deep-clone": "pnpm --filter \"deep-clone\" run lint:types",
        "lint:types:docs": "pnpm --filter \"docs\" run lint:types",
        "lint:types:error": "pnpm --filter \"error\" run lint:types",
        "lint:types:fmt": "pnpm --filter \"fmt\" run lint:types",
        "lint:types:fs": "pnpm --filter \"fs\" run lint:types",
        "lint:types:health-check": "pnpm --filter \"health-check\" run lint:types",
        "lint:types:humanizer": "pnpm --filter \"humanizer\" run lint:types",
        "lint:types:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run lint:types",
        "lint:types:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run lint:types",
        "lint:types:object": "pnpm --filter \"object\" run lint:types",
        "lint:types:package": "pnpm --filter \"package\" run lint:types",
        "lint:types:pagination": "pnpm --filter \"pagination\" run lint:types",
        "lint:types:pail": "pnpm --filter \"pail\" run lint:types",
        "lint:types:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run lint:types",
        "lint:types:redact": "pnpm --filter \"redact\" run lint:types",
        "lint:types:root": "tsc --noEmit",
        "nx": "nx",
        "plop": "plop",
        "prepare": "is-ci || husky || exit 0",
        "sort-package-json": "sort-package-json packages/**/package.json apps/**/package.json ./package.json examples/**/package.json",
        "test": "nx run-many --target=test --all --parallel",
        "test:affected": "nx affected --target=test --parallel --exclude=*-bench,docs,storybook --nxBail",
        "test:affected:browser:chrome": "nx affected --target=test:browser:chrome --parallel --exclude=*-bench,docs,storybook --nxBail",
        "test:affected:browser:firefox": "nx affected --target=test:browser:firefox --parallel --exclude=*-bench,docs,storybook --nxBail",
        "test:affected:browser:webkit": "nx affected --target=test:browser:webkit --parallel --exclude=*-bench,docs,storybook --nxBail",
        "test:affected:coverage": "nx affected --target=test:coverage --parallel --exclude=*-bench,docs,storybook --nxBail",
        "test:ansi": "pnpm --filter \"ansi\" run test",
        "test:api-platform": "pnpm --filter \"api-platform\" run test",
        "test:boxen": "pnpm --filter \"boxen\" run test",
        "test:browser:chrome": "nx run-many --target=test:browser:chrome --all --parallel",
        "test:browser:firefox": "nx run-many --target=test:browser:firefox --all --parallel",
        "test:browser:webkit": "nx run-many --target=test:browser:webkit --all --parallel",
        "test:cerebro": "pnpm --filter \"cerebro\" run test",
        "test:colorize": "pnpm --filter \"colorize\" run test",
        "test:connect": "pnpm --filter \"connect\" run test",
        "test:coverage": "nx run-many --target=test:coverage --all --parallel",
        "test:coverage:ansi": "pnpm --filter \"ansi\" run test:coverage",
        "test:coverage:api-platform": "pnpm --filter \"api-platform\" run test:coverage",
        "test:coverage:boxen": "pnpm --filter \"boxen\" run test:coverage",
        "test:coverage:cerebro": "pnpm --filter \"cerebro\" run test:coverage",
        "test:coverage:colorize": "pnpm --filter \"colorize\" run test:coverage",
        "test:coverage:connect": "pnpm --filter \"connect\" run test:coverage",
        "test:coverage:crud": "pnpm --filter \"crud\" run test:coverage",
        "test:coverage:deep-clone": "pnpm --filter \"deep-clone\" run test:coverage",
        "test:coverage:error": "pnpm --filter \"error\" run test:coverage",
        "test:coverage:fmt": "pnpm --filter \"fmt\" run test:coverage",
        "test:coverage:fs": "pnpm --filter \"fs\" run test:coverage",
        "test:coverage:health-check": "pnpm --filter \"health-check\" run test:coverage",
        "test:coverage:humanizer": "pnpm --filter \"humanizer\" run test:coverage",
        "test:coverage:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run test:coverage",
        "test:coverage:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run test:coverage",
        "test:coverage:object": "pnpm --filter \"object\" run test:coverage",
        "test:coverage:package": "pnpm --filter \"package\" run test:coverage",
        "test:coverage:pagination": "pnpm --filter \"pagination\" run test:coverage",
        "test:coverage:pail": "pnpm --filter \"pail\" run test:coverage",
        "test:coverage:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run test:coverage",
        "test:coverage:redact": "pnpm --filter \"redact\" run test:coverage",
        "test:crud": "pnpm --filter \"crud\" run test",
        "test:deep-clone": "pnpm --filter \"deep-clone\" run test",
        "test:error": "pnpm --filter \"error\" run test",
        "test:fmt": "pnpm --filter \"fmt\" run test",
        "test:fs": "pnpm --filter \"fs\" run test",
        "test:health-check": "pnpm --filter \"health-check\" run test",
        "test:humanizer": "pnpm --filter \"humanizer\" run test",
        "test:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run test",
        "test:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run test",
        "test:object": "pnpm --filter \"object\" run test",
        "test:package": "pnpm --filter \"package\" run test",
        "test:pagination": "pnpm --filter \"pagination\" run test",
        "test:pail": "pnpm --filter \"pail\" run test",
        "test:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run test",
        "test:redact": "pnpm --filter \"redact\" run test",
        "test:ui:ansi": "pnpm --filter \"ansi\" run test:ui",
        "test:ui:api-platform": "pnpm --filter \"api-platform\" run test:ui",
        "test:ui:boxen": "pnpm --filter \"boxen\" run test:ui",
        "test:ui:cerebro": "pnpm --filter \"cerebro\" run test:ui",
        "test:ui:colorize": "pnpm --filter \"colorize\" run test:ui",
        "test:ui:connect": "pnpm --filter \"connect\" run test:ui",
        "test:ui:crud": "pnpm --filter \"crud\" run test:ui",
        "test:ui:deep-clone": "pnpm --filter \"deep-clone\" run test:ui",
        "test:ui:error": "pnpm --filter \"error\" run test:ui",
        "test:ui:fmt": "pnpm --filter \"fmt\" run test:ui",
        "test:ui:fs": "pnpm --filter \"fs\" run test:coverage",
        "test:ui:health-check": "pnpm --filter \"health-check\" run test:ui",
        "test:ui:humanizer": "pnpm --filter \"humanizer\" run test:ui",
        "test:ui:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run test:ui",
        "test:ui:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run test:ui",
        "test:ui:object": "pnpm --filter \"object\" run test:ui",
        "test:ui:package": "pnpm --filter \"package\" run test:ui",
        "test:ui:pagination": "pnpm --filter \"pagination\" run test:ui",
        "test:ui:pail": "pnpm --filter \"pail\" run test:coverage",
        "test:ui:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run test:ui",
        "test:ui:redact": "pnpm --filter \"redact\" run test:ui",
        "update:deps": "taze"
    },
    "browserslist": [
        "extends browserslist-config-anolilab"
    ],
    "dependencies": {
        "@anolilab/commitlint-config": "^5.0.3",
        "@anolilab/lint-staged-config": "^2.1.7",
        "@anolilab/multi-semantic-release": "^1.1.9",
        "@anolilab/prettier-config": "^5.0.14",
        "@anolilab/textlint-config": "^8.0.16",
        "@babel/core": "^7.26.0",
        "@commitlint/cli": "^19.6.1",
        "@commitlint/config-conventional": "^19.6.0",
        "@nrwl/tao": "19.8.4",
        "@nrwl/workspace": "19.8.4",
        "@octokit/rest": "^21.1.0",
        "@secretlint/secretlint-rule-preset-recommend": "^9.0.0",
        "@types/node": "18.19.71",
        "audit-ci": "^7.1.0",
        "browserslist-config-anolilab": "^5.0.14",
        "commitizen": "^4.3.1",
        "core-js": "^3.40.0",
        "cross-env": "^7.0.3",
        "husky": "^9.1.7",
        "is-ci": "^4.1.0",
        "lint-staged": "^15.4.2",
        "nx": "^20.3.3",
        "pkg-pr-new": "^0.0.39",
        "plop": "^4.0.1",
        "prettier": "^3.4.2",
        "publint": "^0.3.2",
        "read-pkg": "^9.0.1",
        "rimraf": "6.0.1",
        "secretlint": "9.0.0",
        "semantic-release": "^24.2.1",
        "sort-package-json": "^2.14.0",
        "taze": "^18.3.0",
        "textlint": "^14.4.2",
        "tsup": "^8.3.5",
        "typescript": "5.7.3",
        "vitest": "^3.0.4"
    },
    "packageManager": "pnpm@9.15.4",
    "engines": {
        "node": ">=18.* <=23.*"
    },
    "pnpm": {
        "overrides": {
            "@types/react": "^19.0.2",
            "@types/react-dom": "^19.0.2",
            "chrono-node@<2.2.4": ">=2.7.7",
            "cookie@<0.7.0": ">=1.0.2",
            "cross-spawn@>=7.0.0 <7.0.5": ">=7.0.5",
            "cross-spawn@<6.0.6": ">=7.0.6",
            "mermaid@<=10.9.2": ">=11.4.1",
            "nanoid@<3.3.8": ">=5.0.9",
            "next@>=9.5.5 <14.2.15": ">=14.2.15",
            "next@>=15.0.0 <15.1.2": ">=15.1.2",
            "next@>=14.0.0 <14.2.10": ">=14.2.10",
            "next@>=13.4.0 <14.1.1": ">=14.1.1",
            "next@>=13.4.0 <13.5.1": ">=13.5.1",
            "next@>=13.4.0 <13.5.0": ">=13.5.0",
            "next@>=0.9.9 <13.4.20-canary.13": ">=13.4.20-canary.13",
            "path-to-regexp@>=2.0.0 <3.3.0": ">=3.3.0",
            "path-to-regexp@<0.1.12": ">=8.2.0",
            "postcss@<8.4.31": ">=8.4.49",
            "rollup@>=4.0.0 <4.22.4": ">=4.22.4",
            "zod@<=3.22.2": ">=3.24.1",
            "store2@<2.14.4": ">=2.14.4",
            "undici@>=6.0.0 <6.21.1": ">=6.21.1"
        }
    }
}
