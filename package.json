{
    "name": "visulima",
    "version": "0.0.0",
    "private": true,
    "sideEffects": false,
    "license": "MIT",
    "type": "module",
    "workspaces": [
        "packages/*",
        "docs"
    ],
    "scripts": {
        "audit": "pnpm dlx audit-ci@^6 --config ./audit-ci.jsonc",
        "bench:colorize": "pnpm --filter \"colorize\" run test:bench",
        "bench:deep-clone": "pnpm --filter \"deep-clone\" run test:bench",
        "bench:fmt": "pnpm --filter \"fmt\" run test:bench",
        "bench:pail": "pnpm --filter \"pail-bench\" run test:bench",
        "build": "nx run-many --target=build --all --parallel",
        "build:docs": "nx run-many --target=build:prod --parallel --projects=tag:type:nextra && pnpm run docs:copy && pnpm --filter \"docs\" run build",
        "build:packages": "nx run-many --target=build --parallel --projects=tag:type:package",
        "build:prod:nextra-theme-docs": "pnpm --filter \"nextra-theme-docs\" run build:prod",
        "build:prod:packages": "nx run-many --target=build:prod --parallel --projects=tag:type:package",
        "build:prod:readdir": "pnpm --filter \"readdir\" run build:prod",
        "build:readdir": "pnpm --filter \"readdir\" run build",
        "build:storybook": "storybook build -o ./storybook-static && node ./scripts/mv.cjs",
        "clean": "nx run-many --target=clean --all --parallel && rimraf ./node_modules",
        "dev:docs": "pnpm run docs:symlink && nx run-many --target=dev --parallel --projects=tag:type:nextra",
        "dev:storybook": "storybook dev -p 6006 -s ./public",
        "docs:copy": "pnpm --filter \"docs\" run docs:copy",
        "docs:symlink": "pnpm --filter \"docs\" run docs:symlink",
        "example:api-platform:express:4:dev": "pnpm --filter \"express_example_api-platform\" run dev",
        "example:api-platform:next:12:dev": "pnpm --filter \"nextjs_12_example_api-platform\" run dev",
        "example:api-platform:next:13:dev": "pnpm --filter \"nextjs_13_example_api-platform\" run dev",
        "example:connect:next:12:dev": "nx run-many --target=dev --parallel --projects=connect,nextjs_12_example_connect",
        "example:connect:next:13:app:dev": "nx run-many --target=dev --parallel --projects=connect,nextjs_13_app_example_connect",
        "example:connect:next:13:dev": "nx run-many --target=dev --parallel --projects=connect,nextjs_13_example_connect",
        "example:crud:next:12:dev": "nx run-many --target=dev --parallel --projects=crud,api-platform,nextjs_12_example_crud",
        "example:crud:next:13:dev": "nx run-many --target=dev --parallel --projects=crud,api-platform,nextjs_13_example_crud",
        "example:health-check:dev": "pnpm --filter \"nextjs_example_health_check\" run dev",
        "example:nextra:build": "nx run-many --target=build --parallel --projects=nextra-theme-docs,nextra_example",
        "example:nextra:dev": "nx run-many --target=dev --parallel --projects=nextra-theme-docs,nextra_example",
        "graph": "nx dep-graph",
        "preinstall": "node verify-node-version.cjs && npx only-allow pnpm",
        "lint": "pnpm run lint:prettier && pnpm run lint:eslint",
        "lint:eslint": "pnpm run lint:eslint:root && nx run-many --target=lint:eslint --all --parallel",
        "lint:eslint:api-platform": "pnpm --filter \"api-platform\" run lint:eslint",
        "lint:eslint:colorize": "pnpm --filter \"colorize\" run lint:eslint",
        "lint:eslint:connect": "pnpm --filter \"connect\" run lint:eslint",
        "lint:eslint:crud": "pnpm --filter \"crud\" run lint:eslint",
        "lint:eslint:deep-clone": "pnpm --filter \"deep-clone\" run lint:eslint",
        "lint:eslint:docs": "pnpm --filter \"docs\" run lint:eslint",
        "lint:eslint:error": "pnpm --filter \"error\" run lint:eslint",
        "lint:eslint:fix": "pnpm run lint:eslint:fix:root && nx run-many --target=lint:eslint:fix --all --parallel",
        "lint:eslint:fix:api-platform": "pnpm --filter \"api-platform\" run lint:eslint:fix",
        "lint:eslint:fix:colorize": "pnpm --filter \"colorize\" run lint:eslint:fix",
        "lint:eslint:fix:connect": "pnpm --filter \"connect\" run lint:eslint:fix",
        "lint:eslint:fix:crud": "pnpm --filter \"crud\" run lint:eslint:fix",
        "lint:eslint:fix:deep-clone": "pnpm --filter \"deep-clone\" run lint:eslint:fix",
        "lint:eslint:fix:docs": "pnpm --filter \"docs\" run lint:eslint:fix",
        "lint:eslint:fix:error": "pnpm --filter \"error\" run lint:eslint:fix",
        "lint:eslint:fix:fmt": "pnpm --filter \"fmt\" run lint:eslint:fix",
        "lint:eslint:fix:health-check": "pnpm --filter \"health-check\" run lint:eslint:fix",
        "lint:eslint:fix:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run lint:eslint:fix",
        "lint:eslint:fix:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run lint:eslint:fix",
        "lint:eslint:fix:nextra-theme-docs": "pnpm --filter \"nextra-theme-docs\" run lint:eslint:fix",
        "lint:eslint:fix:package": "pnpm --filter \"package\" run lint:eslint:fix",
        "lint:eslint:fix:pagination": "pnpm --filter \"pagination\" run lint:eslint:fix",
        "lint:eslint:fix:pail": "pnpm --filter \"pail\" run lint:eslint:fix",
        "lint:eslint:fix:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run lint:eslint:fix",
        "lint:eslint:fix:readdir": "pnpm --filter \"readdir\" run lint:eslint:fix",
        "lint:eslint:fix:root": "eslint . --ext js,cjs,mjs,ts,tsx,json,yaml,yml,md,mdx --max-warnings=0 --config .eslintrc.cjs --fix",
        "lint:eslint:fmt": "pnpm --filter \"fmt\" run lint:eslint",
        "lint:eslint:health-check": "pnpm --filter \"health-check\" run lint:eslint",
        "lint:eslint:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run lint:eslint",
        "lint:eslint:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run lint:eslint",
        "lint:eslint:nextra-theme-docs": "pnpm --filter \"nextra-theme-docs\" run lint:eslint",
        "lint:eslint:package": "pnpm --filter \"package\" run lint:eslint",
        "lint:eslint:pagination": "pnpm --filter \"pagination\" run lint:eslint",
        "lint:eslint:pail": "pnpm --filter \"pail\" run lint:eslint",
        "lint:eslint:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run lint:eslint",
        "lint:eslint:readdir": "pnpm --filter \"readdir\" run lint:eslint",
        "lint:eslint:root": "eslint . --ext js,cjs,mjs,ts,tsx,json,yaml,yml,md,mdx --max-warnings=0 --config .eslintrc.cjs",
        "lint:fix": "pnpm run lint:prettier:fix && pnpm run lint:eslint:fix && pnpm run sort-package-json",
        "lint:packagejson": "nx run-many --target=lint:packagejson --parallel --projects=tag:type:package",
        "lint:prettier": "pnpm run lint:prettier:root && nx run-many --target=lint:prettier --all --parallel",
        "lint:prettier:fix": "pnpm run lint:prettier:fix:root && nx run-many --target=lint:prettier:fix --all --parallel",
        "lint:prettier:fix:root": "prettier --config=.prettierrc.cjs --write '*.{json,yml,yaml,js,ts}' && prettier --config=.prettierrc.cjs --write 'examples/**/*.{json,yml,yaml,js,ts}'",
        "lint:prettier:root": "prettier --config=.prettierrc.cjs --check '*.{json,yml,yaml,js,ts}' && prettier --config=.prettierrc.cjs --check 'examples/**/*.{json,yml,yaml,js,ts}'",
        "lint:secrets": "secretlint **/*",
        "lint:staged": "lint-staged --verbose --concurrent false --debug",
        "lint:text": "textlint ./.github/ ./packages/** ./README.md ./UPGRADE.md --parallel --experimental --cache --dry-run",
        "lint:text:fix": "textlint ./.github/ ./packages/** ./README.md ./UPGRADE.md --parallel --experimental --fix",
        "lint:types": "nx run-many --target=lint:types --all --parallel",
        "lint:types:api-platform": "pnpm --filter \"api-platform\" run lint:types",
        "lint:types:colorize": "pnpm --filter \"colorize\" run lint:types",
        "lint:types:connect": "pnpm --filter \"connect\" run lint:types",
        "lint:types:crud": "pnpm --filter \"crud\" run lint:types",
        "lint:types:deep-clone": "pnpm --filter \"deep-clone\" run lint:types",
        "lint:types:docs": "pnpm --filter \"docs\" run lint:types",
        "lint:types:error": "pnpm --filter \"error\" run lint:types",
        "lint:types:fmt": "pnpm --filter \"fmt\" run lint:types",
        "lint:types:health-check": "pnpm --filter \"health-check\" run lint:types",
        "lint:types:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run lint:types",
        "lint:types:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run lint:types",
        "lint:types:nextra-theme-docs": "pnpm --filter \"nextra-theme-docs\" run lint:types",
        "lint:types:package": "pnpm --filter \"package\" run lint:types",
        "lint:types:pagination": "pnpm --filter \"pagination\" run lint:types",
        "lint:types:pail": "pnpm --filter \"pail\" run lint:types",
        "lint:types:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run lint:types",
        "lint:types:readdir": "pnpm --filter \"readdir\" run lint:types",
        "lint:types:root": "tsc --noEmit",
        "plop": "plop",
        "prepare": "is-ci || husky install || exit 0",
        "sort-package-json": "sort-package-json packages/**/package.json packages/visulima/visulima/package.json ./package.json examples/**/package.json docs/package.json",
        "test": "nx run-many --target=test --all --parallel",
        "test:api-platform": "pnpm --filter \"api-platform\" run test",
        "test:colorize": "pnpm --filter \"colorize\" run test",
        "test:connect": "pnpm --filter \"connect\" run test",
        "test:coverage": "nx run-many --target=test:coverage --all --parallel",
        "test:coverage:api-platform": "pnpm --filter \"api-platform\" run test:coverage",
        "test:coverage:colorize": "pnpm --filter \"colorize\" run test:coverage",
        "test:coverage:connect": "pnpm --filter \"connect\" run test:coverage",
        "test:coverage:crud": "pnpm --filter \"crud\" run test:coverage",
        "test:coverage:deep-clone": "pnpm --filter \"deep-clone\" run test:coverage",
        "test:coverage:error": "pnpm --filter \"error\" run test:coverage",
        "test:coverage:fmt": "pnpm --filter \"fmt\" run test:coverage",
        "test:coverage:health-check": "pnpm --filter \"health-check\" run test:coverage",
        "test:coverage:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run test:coverage",
        "test:coverage:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run test:coverage",
        "test:coverage:nextra-theme-docs": "pnpm --filter \"nextra-theme-docs\" run test:coverage",
        "test:coverage:package": "pnpm --filter \"package\" run test:coverage",
        "test:coverage:pagination": "pnpm --filter \"pagination\" run test:coverage",
        "test:coverage:pail": "pnpm --filter \"pail\" run test:coverage",
        "test:coverage:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run test:coverage",
        "test:coverage:readdir": "pnpm --filter \"readdir\" run test:coverage",
        "test:crud": "pnpm --filter \"crud\" run test",
        "test:deep-clone": "pnpm --filter \"deep-clone\" run test",
        "test:error": "pnpm --filter \"error\" run test",
        "test:fmt": "pnpm --filter \"fmt\" run test",
        "test:health-check": "pnpm --filter \"health-check\" run test",
        "test:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run test",
        "test:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run test",
        "test:nextra-theme-docs": "pnpm --filter \"nextra-theme-docs\" run test",
        "test:package": "pnpm --filter \"package\" run test",
        "test:pagination": "pnpm --filter \"pagination\" run test",
        "test:pail": "pnpm --filter \"pail\" run test",
        "test:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run test",
        "test:readdir": "pnpm --filter \"readdir\" run test",
        "test:ui:api-platform": "pnpm --filter \"api-platform\" run test:ui",
        "test:ui:colorize": "pnpm --filter \"colorize\" run test:ui",
        "test:ui:connect": "pnpm --filter \"connect\" run test:ui",
        "test:ui:crud": "pnpm --filter \"crud\" run test:ui",
        "test:ui:deep-clone": "pnpm --filter \"deep-clone\" run test:ui",
        "test:ui:error": "pnpm --filter \"error\" run test:ui",
        "test:ui:fmt": "pnpm --filter \"fmt\" run test:ui",
        "test:ui:health-check": "pnpm --filter \"health-check\" run test:ui",
        "test:ui:is-ansi-color-supported": "pnpm --filter \"is-ansi-color-supported\" run test:ui",
        "test:ui:jsdoc-open-api": "pnpm --filter \"jsdoc-open-api\" run test:ui",
        "test:ui:nextra-theme-docs": "pnpm --filter \"nextra-theme-docs\" run test:ui",
        "test:ui:package": "pnpm --filter \"package\" run test:ui",
        "test:ui:pagination": "pnpm --filter \"pagination\" run test:ui",
        "test:ui:pail": "pnpm --filter \"pail\" run test:coverage",
        "test:ui:prisma-dmmf-transformer": "pnpm --filter \"prisma-dmmf-transformer\" run test:ui",
        "test:ui:readdir": "pnpm --filter \"readdir\" run test:coverage"
    },
    "browserslist": [
        "extends browserslist-config-anolilab"
    ],
    "dependencies": {
        "@jsenv/file-size-impact": "^14.1.5",
        "@anolilab/commitlint-config": "^5.0.3",
        "@anolilab/eslint-config": "^15.0.3",
        "@anolilab/lint-staged-config": "^2.1.7",
        "@anolilab/multi-semantic-release": "^1.0.3",
        "@anolilab/prettier-config": "^5.0.14",
        "@anolilab/textlint-config": "^8.0.16",
        "@arthurgeron/eslint-plugin-react-usememo": "^2.3.1",
        "@babel/core": "^7.23.9",
        "@commitlint/cli": "^18.6.1",
        "@commitlint/config-conventional": "^18.6.2",
        "@nrwl/tao": "18.0.5",
        "@nrwl/workspace": "18.0.5",
        "@octokit/rest": "^20.0.2",
        "@secretlint/secretlint-rule-preset-recommend": "^8.1.2",
        "@storybook/addon-a11y": "7.6.17",
        "@storybook/addon-actions": "7.6.17",
        "@storybook/addon-console": "3.0.0",
        "@storybook/addon-essentials": "~7.6.17",
        "@storybook/addon-interactions": "^7.6.17",
        "@storybook/addon-themes": "7.6.17",
        "@storybook/builder-vite": "~7.6.17",
        "@storybook/core-server": "~7.6.17",
        "@storybook/react": "7.6.17",
        "@storybook/react-vite": "7.6.17",
        "@storybook/test-runner": "^0.16.0",
        "@storybook/testing-library": "~0.2.2",
        "@testing-library/react": "^14.2.1",
        "@tsconfig/node18": "^18.2.2",
        "@tsconfig/strictest": "^2.0.3",
        "@types/node": "18.18.14",
        "browserslist-config-anolilab": "^5.0.14",
        "commitizen": "^4.3.0",
        "core-js": "^3.36.0",
        "cross-env": "^7.0.3",
        "depcheck": "^1.4.7",
        "eslint": "^8.57.0",
        "eslint-plugin-deprecation": "^2.0.0",
        "eslint-plugin-editorconfig": "^4.0.3",
        "eslint-plugin-etc": "^2.0.3",
        "eslint-plugin-import": "npm:eslint-plugin-i@^2.29.1",
        "eslint-plugin-jsx-a11y": "^6.8.0",
        "eslint-plugin-mdx": "^3.1.5",
        "eslint-plugin-react": "7.33.2",
        "eslint-plugin-react-hooks": "4.6.0",
        "eslint-plugin-ssr-friendly": "^1.3.0",
        "eslint-plugin-storybook": "^0.8.0",
        "eslint-plugin-tailwindcss": "^3.14.3",
        "eslint-plugin-testing-library": "^6.2.0",
        "eslint-plugin-validate-jsx-nesting": "^0.1.1",
        "husky": "^9.0.11",
        "is-ci": "^3.0.1",
        "lint-staged": "^15.2.2",
        "load-tsconfig": "^0.2.5",
        "mvdir": "^1.0.21",
        "nx": "^18.0.5",
        "plop": "^4.0.1",
        "prettier": "^3.2.5",
        "publint": "^0.2.7",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "read-pkg": "^9.0.1",
        "rimraf": "^5.0.5",
        "secretlint": "8.1.2",
        "semantic-release": "^23.0.2",
        "sort-package-json": "^2.8.0",
        "storybook": "7.6.17",
        "tailwindcss": "^3.4.1",
        "textlint": "^14.0.3",
        "tsup": "^8.0.2",
        "typescript": "^5.3.3",
        "vite": "^5.1.4"
    },
    "packageManager": "pnpm@8.15.4",
    "engines": {
        "node": ">=18.* <=21.*"
    },
    "anolilab": {
        "eslint-config": {
            "plugin": {
                "tsdoc": false,
                "testing-library-dom": false
            },
            "warn_on_unsupported_typescript_version": false,
            "info_on_disabling_jsx_react_rule": false,
            "info_on_disabling_prettier_conflict_rule": false,
            "info_on_disabling_jsonc_sort_keys_rule": false,
            "info_on_disabling_etc_no_deprecated": false
        }
    },
    "pnpm": {
        "overrides": {
            "load-tsconfig": "^0.2.5",
            "tsconfig-paths": "^4.2.0",
            "cosmiconfig-typescript-loader": "^5.0.0",
            "@mdx-js/react": "^2.3.0",
            "estree-util-build-jsx": "^3.0.0",
            "typescript": "^5.3.3",
            "semver": "^7.5.4",
            "got@<11.8.5": ">=11.8.5",
            "trim@<0.0.3": ">=0.0.3",
            "chrono-node@<2.2.4": ">=2.2.4",
            "postcss@<8.4.31": ">=8.4.31",
            "zod@<=3.22.2": ">=3.22.3",
            "tough-cookie@<4.1.3": ">=4.1.3",
            "@babel/traverse@<7.23.2": ">=7.23.2"
        }
    }
}
